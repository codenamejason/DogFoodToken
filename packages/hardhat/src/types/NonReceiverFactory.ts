/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { NonReceiver } from "./NonReceiver";

export class NonReceiverFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<NonReceiver> {
    return super.deploy(overrides || {}) as Promise<NonReceiver>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): NonReceiver {
    return super.attach(address) as NonReceiver;
  }
  connect(signer: Signer): NonReceiverFactory {
    return super.connect(signer) as NonReceiverFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NonReceiver {
    return new Contract(address, _abi, signerOrProvider) as NonReceiver;
  }
}

const _abi = [
  {
    inputs: [],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052348015600f57600080fd5b50608d8061001e6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063267c4ae414602d575b600080fd5b60336047565b604051603e9190604c565b60405180910390f35b600190565b90151581526020019056fea26469706673582212207a8dc3e93e9e1f11a1ee80149457dcbd3d80a3eb21ead15c582e3090f6cfb62964736f6c63430008000033";
